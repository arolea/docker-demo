apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-world-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: hello-world
  template:
    metadata:
      labels:
        app: hello-world
    spec:
      containers:
        - name: hello-world-container
          image: alexrolea/hello-world:1.0.0
          imagePullPolicy: Always
          ports:
            - name: hello-port
              containerPort: 8081
          # ConfigMaps can be used if you want to pass a configuration file (ex: JSON) to a service
          env:
            - name: spring.datasource.url
              # Use the service name of the database pod to leverage the Kubernetes DNS service
              value: jdbc:mysql://hello-world-db-service:3306/hello-db
            - name: spring.datasource.username
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: db.username
            - name: spring.datasource.password
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: db.password
          # Detect unhealthy instances
          livenessProbe:
            httpGet:
              path: /hello
              port: hello-port
            initialDelaySeconds: 60
            timeoutSeconds: 5
          # Wait for service init before routing traffic to instance
          readinessProbe:
            httpGet:
              path: /hello
              port: hello-port
            initialDelaySeconds: 30
            timeoutSeconds: 5

---

apiVersion: v1
kind: Service
metadata:
  name: hello-world-service
spec:
  selector:
    app: hello-world
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8081
  type: NodePort